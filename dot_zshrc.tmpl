# -----------------------------------------------------------------------------
# oh-my-zsh configuration (~/.zshrc)
# -----------------------------------------------------------------------------


# -----------------------------
# omz settings
# -----------------------------

# if you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# oh-my-zsh installation path
export ZSH="$HOME/.oh-my-zsh"

# https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins
plugins=(
    git
    zsh-autosuggestions
    zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh


# -----------------------------
# machine specific
# -----------------------------

# editor
# preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
    export EDITOR="$(which nano)"
else
    export EDITOR="$(which zed) --wait"
fi
# export VISUAL="$EDITOR"

# aliases
alias moi="chezmoi"
alias neo="neofetch"
alias clr="clear"

{{ if and (not .host.headless) -}}
# enable SSH access using a GPG key for authentication
## configure SSH to use GPG
unset SSH_AGENT_PID
if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
  export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
fi
## set an environment variable to tell GPG the current terminal
export GPG_TTY=$(tty)
## start gpg-agent, if it isn't started already
gpgconf --launch gpg-agent
## gpg-connect-agent /bye > /dev/null
## gpg-connect-agent reloadagent /bye > /dev/null
gpg-connect-agent updatestartuptty /bye > /dev/null
{{- end }}

{{ if (eq .chezmoi.os "darwin") -}}
# function aliases
brew_add() {
    brew i $1 $2
    brew bundle dump --force
    chezmoi re-add ~/.brewfile
}
brew_del() {
    brew rm $1 $2
    brew bundle dump --force
    chezmoi re-add ~/.brewfile
}

# homebrew
export HOMEBREW_BUNDLE_FILE=$HOME/.brewfile
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_ENV_HINTS=1
export HOMEBREW_NO_INSTALL_CLEANUP=1
{{ end -}}

{{ if (eq .chezmoi.os "linux") -}}
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LANG=en_US.UTF-8

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
# bun completions
[ -s "$BUN_INSTALL/_bun" ] && source "$BUN_INSTALL/_bun"
{{ end -}}
